[{"/Users/douglaslee/Angela/demofork/my-app/src/index.js":"1","/Users/douglaslee/Angela/demofork/my-app/src/App.js":"2","/Users/douglaslee/Angela/demofork/my-app/src/reportWebVitals.js":"3","/Users/douglaslee/Angela/demofork/my-app/src/components/Chart2/Chart2.jsx":"4","/Users/douglaslee/Angela/demofork/my-app/src/components/Navbar/Navbar.jsx":"5","/Users/douglaslee/Angela/demofork/my-app/src/components/Chart3/Chart3.jsx":"6","/Users/douglaslee/Angela/demofork/my-app/src/components/Chart1/Chart1.jsx":"7"},{"size":500,"mtime":1612166007471,"results":"8","hashOfConfig":"9"},{"size":777,"mtime":1612166370978,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612166007473,"results":"11","hashOfConfig":"9"},{"size":2305,"mtime":1612166349931,"results":"12","hashOfConfig":"9"},{"size":971,"mtime":1612166349935,"results":"13","hashOfConfig":"9"},{"size":4706,"mtime":1612166349932,"results":"14","hashOfConfig":"9"},{"size":3560,"mtime":1612166349928,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8y2ymk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"/Users/douglaslee/Angela/demofork/my-app/src/index.js",[],["36","37"],"/Users/douglaslee/Angela/demofork/my-app/src/App.js",["38"],"\nimport React from 'react'\nimport './App.css';\nimport Navbar1 from './components/Navbar/Navbar'\nimport Chart1 from './components/Chart1/Chart1'\nimport Chart2 from './components/Chart2/Chart2'\nimport Chart3 from './components/Chart3/Chart3'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Navbar1 />\n        <Switch>\n          <Route path=\"/Chart1\" component={Chart1}>\n            <Chart1 />\n          </Route>\n          <Route path=\"/Chart2\" component={Chart2}>\n            <Chart2 />\n          </Route>\n          <Route path=\"/Chart3\" component={Chart3}>\n            <Chart3 />\n          </Route>\n        </Switch>\n      </Router>\n    </div >\n  )\n}\n\nexport default App;","/Users/douglaslee/Angela/demofork/my-app/src/reportWebVitals.js",[],"/Users/douglaslee/Angela/demofork/my-app/src/components/Chart2/Chart2.jsx",["39"],"import React, { useState, useEffect } from 'react'\nimport { HorizontalBar } from 'react-chartjs-2';\n\nconst Chart2 = () => {\n    const [chartData, setChartData] = useState({})\n    const chart = () => {\n        setChartData({\n            datasets: [{\n                label: 'Day(s)',\n                data: [0.03, 0.8, 0.5, 0.3, 0.4, 0.7, 14],\n                borderWidth: 4,\n                barThickness: 25,\n                backgroundColor: \"#fe7985\",\n                borderColor: \"#43b5c8\",\n                barThickness: \"flex\",\n\n            }],\n            labels:\n                ['Arrive customer address to Goods Receipt',\n                    'Pick to Arrive Customer address',\n                    'Customer order to pick',\n                    'Arrive Inbound Airport to warehouse',\n                    \"Arrive Outbound Airport to Arrive Inbound\",\n                    'Exit factory to Arrive Outbound Airport',\n                    'Confirmation to Exit Factory']\n        })\n    }\n    useEffect(() => { chart() }, [])\n    return (\n        <div>\n            <HorizontalBar data={chartData}\n                options={{\n                    title: {\n                        display: true,\n                        text: \"Chart 2\",\n                        fontSize: 30\n                    },\n                    scales: {\n                        xAxes: [{\n                            ticks: {\n                                beginAtZero: true,\n                                max: 15,\n                                maxTicksLimit: 5\n                            },\n                            gridLines: {\n                                display: true\n                            }\n                        }],\n                        yAxes: [{\n                            gridLines: {\n                                display: false\n                            }\n                        }]\n                    },\n                    responsive: true,\n                    legend: {\n                        display: true,\n                        position: \"bottom\",\n                        labels: {\n                            fontColor: '#222826',\n                            fontSize: 20,\n                        }\n                    },\n\n\n\n                }} />\n        </div>\n    )\n}\n\nexport default Chart2;","/Users/douglaslee/Angela/demofork/my-app/src/components/Navbar/Navbar.jsx",["40","41","42","43"],"import React from 'react';\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst Navbar1 = () => {\n    return (\n        <div className=\"App\">\n            <Navbar collapseOnSelect expand=\"sm\" bg=\"danger\" variant=\"dark\">\n                <Navbar.Brand >Demo App</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Link to=\"/Chart1\"><Nav.Link href=\"Chart1\">Chart1</Nav.Link></Link>\n                        <Link to=\"/Chart2\"><Nav.Link href=\"Chart2\">Chart2</Nav.Link></Link>\n                        <Link to=\"/Chart3\"><Nav.Link href=\"Chart3\">Chart3</Nav.Link></Link>\n                    </Nav>\n\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default Navbar1;","/Users/douglaslee/Angela/demofork/my-app/src/components/Chart3/Chart3.jsx",["44"],"import React, { useState, useEffect } from 'react'\nimport { Pie, Line } from 'react-chartjs-2';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Chart3 = () => {\n    const [chartData, setChartData] = useState({})\n    const [chartData2, setChartData2] = useState({})\n    const [chartData3, setChartData3] = useState({})\n    const [chartData4, setChartData4] = useState({})\n    const chart = () => {\n        setChartData({\n            labels: ['Ordered', 'Delivered'],\n            datasets: [\n                {\n                    label: 'Chart1',\n                    backgroundColor: ['#b69c90', '#38a1eb'],\n                    borderColor: 'rgba(0,0,0,1)',\n                    borderWidth: 2,\n                    data: [90, 10]\n                }\n            ]\n        })\n        setChartData2({\n            labels: ['# of products delivered', 'Arrived airport'],\n            datasets: [\n                {\n                    label: 'Chart2',\n                    backgroundColor: ['#fecd56', '#38a1eb',],\n                    borderColor: 'rgba(0,0,0,1)',\n                    borderWidth: 2,\n                    data: [70, 30]\n                }\n            ]\n        })\n        setChartData3({\n            labels: ['#of products arrived inbound airport', 'arrive warehouse'],\n            datasets: [\n                {\n                    label: 'Chart3',\n                    backgroundColor: ['#fecd56', '#38a1eb',],\n                    borderColor: 'rgba(0,0,0,1)',\n                    borderWidth: 2,\n                    data: [20, 80]\n                }\n            ]\n        })\n        setChartData4({\n            labels: ['Customer Order', 'Delivered'],\n            datasets: [\n                {\n                    label: 'Chart4',\n                    backgroundColor: ['#ff6182', '#38a1eb',],\n                    borderColor: 'rgba(0,0,0,1)',\n                    borderWidth: 2,\n                    data: [60, 40]\n                }\n            ]\n        })\n    }\n\n\n    useEffect(() => { chart() }, [])\n    return (\n        <Container fluid >\n\n            <Row>\n                {/* Chart1 */}\n                <Col lg={6} md={12}> <Pie data={chartData}\n                    options={{\n                        title: {\n                            display: true,\n                            text: 'Purchase order',\n                            fontSize: 15\n                        },\n\n                        cutoutPercentage: 50,\n                        responsive: true,\n                        legend: {\n                            display: true,\n                            position: 'top'\n                        }\n                    }} />\n                </Col>\n                {/* Chart2 */}\n                <Col lg={6} md={12}><Pie data={chartData2}\n                    options={{\n                        title: {\n                            display: true,\n                            text: 'Outbound shipment',\n                            fontSize: 15\n                        },\n                        cutoutPercentage: 50,\n                        responsive: true,\n                        legend: {\n                            display: true,\n                            position: 'top'\n                        }\n                    }} />\n                </Col>\n                {/* Chart 3 */}\n                <Col lg={6} md={12}>\n                    <Pie data={chartData3}\n                        options={{\n                            title: {\n                                display: true,\n                                text: 'Inbound shipment',\n                                fontSize: 15\n                            },\n                            cutoutPercentage: 50,\n                            responsive: true,\n                            legend: {\n                                display: true,\n                                position: 'top'\n                            }\n                        }} />\n                </Col>\n                {/* Chart 4 */}\n                <Col lg={6} md={12}>\n                    <Pie data={chartData4}\n                        options={{\n                            title: {\n                                display: true,\n                                text: 'Sales Order',\n                                fontSize: 15\n                            },\n                            cutoutPercentage: 50,\n                            responsive: true,\n                            legend: {\n                                display: true,\n                                position: 'top'\n                            }\n                        }} />\n                </Col>\n            </Row>\n\n\n        </Container>\n    )\n}\n\nexport default Chart3;","/Users/douglaslee/Angela/demofork/my-app/src/components/Chart1/Chart1.jsx",["45","46"],"import React, { useState, useEffect } from 'react'\nimport { Line, Bar } from 'react-chartjs-2';\n\n\nconst Chart1 = () => {\n    const [chartData, setChartData] = useState({})\n\n    const chart = () => {\n        setChartData({\n            datasets: [{\n                label: 'Days of inventory',\n                yAxisID: 'Line Dataset',\n                data: [50, 40, 53, 56, 53, 29, 25, 40, 20, 15,],\n                type: 'line',\n                borderColor: \"#f08b3c\",\n                fill: false,\n                lineTension: 0,\n                order: 0\n            }, {\n                label: 'Inventory',\n                yAxisID: 'Bar Dataset',\n                data: [150, 50, 300, 220, 50, 25, 30, 50, 20, 50],\n                borderWidth: 3,\n                barThickness: 25,\n                backgroundColor: \"#0296fd\",\n                borderColor: \"#43b5c8\",\n                barThickness: \"flex\",\n                order: 1\n            }],\n            labels:\n                ['Product 1', 'Product 2', 'Product 3',\n                    'Product 4', \"Product 5\", 'Product 6'\n                    , 'Product 7', 'Product 8', 'Product 9', 'Product 10']\n\n        })\n    }\n    useEffect(() => { chart() }, [])\n    return (\n        <div>\n            <div>\n                <Bar data={chartData}\n                    options={{\n                        title: {\n                            display: true,\n                            text: \"Chart 1\",\n                            fontSize: 30\n                        },\n                        responsive: true,\n                        legend: {\n                            display: true,\n                            position: \"bottom\",\n                            labels: {\n                                fontColor: '#222826',\n                                fontSize: 20,\n                            }\n                        },\n                        scales: {\n                            yAxes: [\n                                {\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 'Inventory',\n                                    },\n                                    id: \"Bar Dataset\",\n                                    type: 'linear',\n                                    position: \"left\",\n                                    ticks: {\n                                        max: 350,\n                                        autoSkip: true,\n                                        //maxTicksLimit: 10,\n                                        beginAtZero: true\n                                    }\n\n                                }, {\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 'Days of inventory'\n\n                                    },\n                                    id: \"Line Dataset\",\n                                    type: 'linear',\n                                    position: 'right',\n                                    ticks: {\n                                        max: 70,\n                                        autoSkip: true,\n                                        maxTicksLimit: 10,\n                                        beginAtZero: true\n                                    }\n                                }\n                            ]\n                        }\n                    }} />\n            </div>\n        </div>\n    )\n}\n\nexport default Chart1;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":13,"column":3,"nodeType":"53","messageId":"54","endLine":13,"endColumn":7},{"ruleId":"55","severity":1,"message":"56","line":15,"column":17,"nodeType":"57","messageId":"58","endLine":15,"endColumn":29},{"ruleId":"51","severity":1,"message":"59","line":2,"column":18,"nodeType":"53","messageId":"54","endLine":2,"endColumn":29},{"ruleId":"51","severity":1,"message":"60","line":4,"column":22,"nodeType":"53","messageId":"54","endLine":4,"endColumn":28},{"ruleId":"51","severity":1,"message":"61","line":5,"column":5,"nodeType":"53","messageId":"54","endLine":5,"endColumn":11},{"ruleId":"51","severity":1,"message":"62","line":6,"column":5,"nodeType":"53","messageId":"54","endLine":6,"endColumn":10},{"ruleId":"51","severity":1,"message":"63","line":2,"column":15,"nodeType":"53","messageId":"54","endLine":2,"endColumn":19},{"ruleId":"51","severity":1,"message":"63","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":27,"column":17,"nodeType":"57","messageId":"58","endLine":27,"endColumn":29},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'barThickness'.","ObjectExpression","unexpected","'NavDropdown' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Line' is defined but never used.","no-global-assign","no-unsafe-negation"]